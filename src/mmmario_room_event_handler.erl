%%%-------------------------------------------------------------------
%%% @author lycaon
%%% @copyright (C) 2014, <COMPANY>
%%% @doc
%%%
%%% @end
%%% Created : 08. 9 2014 23:44
%%%-------------------------------------------------------------------
-module(mmmario_room_event_handler).
-author("lycaon").

-behaviour(gen_event).

%% API
-export([start_link/0,
  add_handler/0]).

%% gen_event callbacks
-export([init/1,
  notify/1,
  handle_event/2,
  handle_call/2,
  handle_info/2,
  terminate/2,
  code_change/3]).

-define(SERVER, ?MODULE).

-record(revtstate, {}).

-record(room, {
  uid,
  state = idle
}).

%%%===================================================================
%%% gen_event callbacks
%%%===================================================================

%%--------------------------------------------------------------------
%% @doc
%% イベントハンドラ開始。ETSもここで開始しておく
%% @end
%%--------------------------------------------------------------------
start_link() ->
  ets:new(?MODULE, [set, named_table, {keypos, #room.uid}]),
  gen_event:start_link({local, ?SERVER}).

%%--------------------------------------------------------------------
%% @doc
%% ハンドラー追加
%% @end
%%--------------------------------------------------------------------
add_handler() ->
  HandlerId = {?MODULE, make_ref()},
  gen_event:add_handler(?SERVER, HandlerId, []),
  HandlerId.

%%--------------------------------------------------------------------
%% @doc
%% イベント通知
%% @end
%%--------------------------------------------------------------------
notify(Event) ->
  gen_event:notify(?SERVER, Event).

%%%===================================================================
%%% gen_event callbacks
%%%===================================================================

%%--------------------------------------------------------------------
%% @private
%% @doc
%%
%% @end
%%--------------------------------------------------------------------
init([]) ->
  {ok, #revtstate{}}.

%%--------------------------------------------------------------------
%% @private
%% @doc
%% 新しい部屋生成イベント
%% ETSに部屋情報を追加
%% @end
%%--------------------------------------------------------------------
handle_event({new_room, RUid}, State) ->
  ets:insert(?SERVER, #room{uid = RUid}),
  {ok, State};

%%--------------------------------------------------------------------
%% @doc
%% 満室通知イベント
%% @end
%%--------------------------------------------------------------------
handle_event({full_room, RUid}, State) ->
  ets:insert(?SERVER, #room{uid = RUid, state = pregame}),
  {ok, State}.

%%--------------------------------------------------------------------
%% @private
%% @doc
%%
%% @end
%%--------------------------------------------------------------------
handle_call(_Request, State) ->
  Reply = ok,
  {ok, Reply, State}.

%%--------------------------------------------------------------------
%% @private
%% @doc
%%
%% @end
%%--------------------------------------------------------------------
handle_info(_Info, State) ->
  {ok, State}.

%%--------------------------------------------------------------------
%% @private
%% @doc
%%
%% @spec terminate(Reason, State) -> void()
%% @end
%%--------------------------------------------------------------------
terminate(_Arg, _State) ->
  ok.

%%--------------------------------------------------------------------
%% @private
%% @doc
%%
%% @end
%%--------------------------------------------------------------------
code_change(_OldVsn, State, _Extra) ->
  {ok, State}.

%%%===================================================================
%%% Internal functions
%%%===================================================================
